{"version":3,"sources":["api/api.ts","components/ConfirmDelete/ConfirmDelete.tsx","components/ContactList/ContactList.tsx","components/ContactInfo/ContactInfo.tsx","App.tsx","index.tsx"],"names":["loadUsers","a","fetch","response","json","data","ConfirmDelete","isVisible","setVisibility","onDelete","selectedUserId","className","cn","onClick","event","stopPropagation","type","ContactList","state","id","name","username","email","phone","website","isConfirmationVisible","inputHandler","target","value","setState","prevState","submitHandler","preventDefault","newUser","props","visibleUsers","length","onAdd","setConfirmationVisibility","deleteClickHandler","userId","this","map","user","to","onFindUser","onSubmit","onChange","placeholder","required","React","Component","ContactInfo","currentUser","App","users","addUser","deleteUser","filter","findUserById","foundUser","find","loadedUsers","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.195a8fa5.chunk.js","sourcesContent":["const BASE_URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const loadUsers = async () => {\n  const response = await fetch(BASE_URL);\n\n  const data: User[] = await response.json();\n\n  return data;\n};\n","import React from \"react\";\nimport './ConfirmDelete.css';\nimport cn from 'classnames';\n\ninterface Props {\n  isVisible: boolean,\n  setVisibility: (value: boolean) => void,\n  onDelete: (selectedUserId: number) => void,\n  selectedUserId: number,\n}\n\nexport const ConfirmDelete: React.FC<Props> = ({\n  isVisible,\n  setVisibility,\n  onDelete,\n  selectedUserId,\n}) => {\n\n  const confirmedDeletionHandler = () => {\n    onDelete(selectedUserId);\n    setVisibility(false);\n  };\n  return (\n    <div\n      className={cn(\n        'popup',\n        {'active': isVisible}\n      )}\n      onClick={() => setVisibility(false)}\n    >\n      <div\n        className={cn(\n          'popup__content',\n          {'active': isVisible}\n        )}\n        onClick={(event) => event.stopPropagation()}>\n        <p>Do you confirm deletion?</p>\n        <button\n          onClick={() => confirmedDeletionHandler()}\n          type=\"button\"\n        >\n          Yes\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setVisibility(false)}\n        >\n          No\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ConfirmDelete } from '../ConfirmDelete/ConfirmDelete';\nimport './ContactList.css';\nimport {Link} from 'react-router-dom';\n\ninterface Props {\n  visibleUsers: User[],\n  onAdd: (newUser: User) => void,\n  onDelete: (selectedUserId: number) => void,\n  onFindUser: (id: number) => void,\n}\n\ninterface State {\n  id: number,\n  name: string,\n  username?: string,\n  email: string,\n  phone?: string,\n  website?: string,\n  isConfirmationVisible: boolean,\n  selectedUserId: number;\n}\n\nexport class ContactList extends React.Component<Props, State> {\n  state: State = {\n    id: 0,\n    name: '',\n    username: '',\n    email: '',\n    phone: '',\n    website: '',\n    isConfirmationVisible: false,\n    selectedUserId: 0,\n  }\n\n  inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }))\n  };\n\n  submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newUser = {\n      ...this.state,\n      id: this.props.visibleUsers.length + 1,\n    }\n\n    this.props.onAdd(newUser);\n\n    this.setState({\n      id: 0,\n      name: '',\n      username: '',\n      email: '',\n      phone: '',\n      website: '',\n    })\n  };\n\n  setConfirmationVisibility = (value: boolean) => {\n    this.setState({\n      isConfirmationVisible: value,\n    })\n  };\n\n  deleteClickHandler = (userId: number) => {\n    this.setConfirmationVisibility(true);\n    this.setState({\n      selectedUserId: userId,\n    })\n  };\n\n  render() {\n    const {\n      name,\n      username,\n      email,\n      phone,\n      website,\n    } = this.state;\n    return (\n      <div>\n        <ConfirmDelete\n          isVisible={this.state.isConfirmationVisible}\n          setVisibility={this.setConfirmationVisibility}\n          onDelete={this.props.onDelete}\n          selectedUserId={this.state.selectedUserId}\n        />\n        <ul>\n          {this.props.visibleUsers.map(user => (\n            <li key={user.id}>\n              <div>\n                {user.name}\n              </div>\n              <div>\n                <button\n                  onClick={() => this.deleteClickHandler(user.id)}\n                  type=\"button\"\n                >\n                  Delete user\n                </button>\n              </div>\n              <div>\n                {/*eslint-disable-next-line jsx-a11y/anchor-is-valid*/}\n                <Link\n                  to=\"contact-info\"\n                  onClick={() => this.props.onFindUser(user.id)}\n                >\n                  More info\n                </Link>\n              </div>\n            </li>\n          ))}\n        </ul>\n        <form\n          className=\"form\"\n          onSubmit={this.submitHandler}\n        >\n          <p>Add new user</p>\n          <input\n            onChange={this.inputHandler}\n            value={name}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            required\n          />\n          <input\n            onChange={this.inputHandler}\n            value={username}\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"Username\"\n          />\n          <input\n            onChange={this.inputHandler}\n            value={email}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            required\n          />\n          <input\n            onChange={this.inputHandler}\n            value={phone}\n            name=\"phone\"\n            type=\"tel\"\n            placeholder=\"Phone\"\n          />\n          <input\n            onChange={this.inputHandler}\n            value={website}\n            name=\"website\"\n            type=\"text\"\n            placeholder=\"Website\"\n          />\n          <button\n            type=\"submit\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}","import React from \"react\";\n\ninterface Props {\n  currentUser: User,\n}\n\ninterface State {\n  id: number,\n  name: string,\n  username?: string,\n  email: string,\n  phone?: string,\n  website?: string,\n}\n\nexport class ContactInfo extends React.Component<Props, State> {\n  state = {\n    id: 0,\n    name: '',\n    username: '',\n    email: '',\n    phone: '',\n    website: '',\n  }\n\n  componentDidMount() {\n    if (this.props.currentUser.id) {\n      const {\n        id,\n        name,\n        username,\n        email,\n        phone,\n        website,\n      } = this.props.currentUser\n\n      this.setState({ id, name, username, email, phone, website });\n    }\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      username,\n      email,\n      phone,\n      website,\n    } = this.state\n\n    return (\n      <>\n        {id ? (\n          <ul>\n            <li>Name: {name}</li>\n            <li>Username: {username}</li>\n            <li>Email: {email}</li>\n            <li>Phone: {phone}</li>\n            <li>Website: {website}</li>\n          </ul>\n        ) : (\n          <span>Oops, something went wrong...</span>\n        )}\n      </>\n    );\n  }\n}","import React from 'react';\nimport { loadUsers } from './api/api';\nimport './App.css';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { ContactInfo } from './components/ContactInfo/ContactInfo';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\ninterface State {\n  users: User[],\n  currentUser: User,\n}\n\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    users: [],\n    currentUser: {\n      id: 0,\n      name: '',\n      username: '',\n      email: '',\n      phone: '',\n      website: '',\n    },\n  }\n\n  async componentDidMount () {\n    const loadedUsers = await loadUsers();\n\n    this.setState({ users: loadedUsers });\n  }\n\n  addUser = (newUser: User) => {\n    this.setState(prevState => ({\n      users: [...prevState.users, newUser]\n    }))\n  };\n\n  deleteUser = (selectedUserId: number) => {\n    this.setState(prevState => ({\n      users: [...prevState.users.filter(user => user.id !== selectedUserId)]\n    }))\n  };\n\n  findUserById = (id: number) => {\n    const foundUser = this.state.users\n      .find(user => user.id === id);\n\n    if (foundUser) {\n      this.setState({currentUser: foundUser });\n    }\n  };\n\n  render() {\n    const {users} = this.state;\n\n    return (\n      <main className=\"App\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <ContactList\n                visibleUsers={users}\n                onAdd={this.addUser}\n                onDelete={this.deleteUser}\n                onFindUser={this.findUserById}\n              />\n            }\n          />\n          <Route\n            path=\"/contact-info\"\n            element={<ContactInfo currentUser={this.state.currentUser}/>}\n          />\n          <Route\n            path=\"*\"\n            element={<Navigate to=\"/\" />}\n          />\n        </Routes>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}