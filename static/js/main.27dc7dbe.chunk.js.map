{"version":3,"sources":["api/api.ts","components/ConfirmDelete/ConfirmDelete.tsx","components/ContactList/ContactList.tsx","App.tsx","index.tsx"],"names":["getUsers","a","fetch","response","json","data","ConfirmDelete","isVisible","setVisibility","onDelete","selectedUserId","className","cn","onClick","event","stopPropagation","type","ContactList","state","id","name","username","email","phone","website","isConfirmationVisible","inputHandler","target","value","setState","prevState","submitHandler","preventDefault","newUser","props","visibleUsers","length","onAdd","setConfirmationVisibility","deleteClickHandler","userId","this","map","user","href","onSubmit","onChange","required","React","Component","App","users","addUser","deleteUser","filter","loadedUsers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27dc7dbe.chunk.js","sourcesContent":["const BASE_URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getUsers = async () => {\n  const response = await fetch(BASE_URL);\n\n  const data: User[] = await response.json();\n\n  return data;\n};\n","import React from \"react\";\nimport './ConfirmDelete.css';\nimport cn from 'classnames';\n\ninterface Props {\n  isVisible: boolean,\n  setVisibility: (value: boolean) => void,\n  onDelete: (selectedUserId: number) => void,\n  selectedUserId: number,\n}\n\nexport const ConfirmDelete: React.FC<Props> = ({\n  isVisible,\n  setVisibility,\n  onDelete,\n  selectedUserId,\n}) => {\n\n  const confirmedDeletionHandler = () => {\n    onDelete(selectedUserId);\n    setVisibility(false);\n  };\n  return (\n    <div\n      className={cn(\n        'popup',\n        {'active': isVisible}\n      )}\n      onClick={() => setVisibility(false)}\n    >\n      <div\n        className={cn(\n          'popup__content',\n          {'active': isVisible}\n        )}\n        onClick={(event) => event.stopPropagation()}>\n        <p>Do you confirm deletion?</p>\n        <button\n          onClick={() => confirmedDeletionHandler()}\n          type=\"button\"\n        >\n          Yes\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setVisibility(false)}\n        >\n          No\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ConfirmDelete } from '../ConfirmDelete/ConfirmDelete';\n\ninterface Props {\n  visibleUsers: User[],\n  onAdd: (newUser: User) => void,\n  onDelete: (selectedUserId: number) => void,\n}\n\ninterface State {\n  id: number,\n  name: string,\n  username?: string,\n  email: string,\n  phone?: string,\n  website?: string,\n  isConfirmationVisible: boolean,\n  selectedUserId: number;\n}\n\nexport class ContactList extends React.Component<Props, State> {\n  state: State = {\n    id: 0,\n    name: '',\n    username: '',\n    email: '',\n    phone: '',\n    website: '',\n    isConfirmationVisible: false,\n    selectedUserId: 0,\n  }\n\n  inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }))\n  };\n\n  submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newUser = {\n      ...this.state,\n      id: this.props.visibleUsers.length + 1,\n    }\n\n    this.props.onAdd(newUser);\n\n    this.setState({\n      id: 0,\n      name: '',\n      username: '',\n      email: '',\n      phone: '',\n      website: '',\n    })\n  };\n\n  setConfirmationVisibility = (value: boolean) => {\n    this.setState({\n      isConfirmationVisible: value,\n    })\n  };\n\n  deleteClickHandler = (userId: number) => {\n    this.setConfirmationVisibility(true);\n    this.setState({\n      selectedUserId: userId,\n    })\n  };\n\n  render() {\n    const {\n      name,\n      username,\n      email,\n      phone,\n      website,\n    } = this.state;\n    return (\n      <div>\n        <ConfirmDelete\n          isVisible={this.state.isConfirmationVisible}\n          setVisibility={this.setConfirmationVisibility}\n          onDelete={this.props.onDelete}\n          selectedUserId={this.state.selectedUserId}\n        />\n        <ul>\n          {this.props.visibleUsers.map(user => (\n            <li key={user.id}>\n              <div>\n                {user.name}\n              </div>\n              <div>\n                <button\n                  onClick={() => this.deleteClickHandler(user.id)}\n                  type=\"button\"\n                >\n                  Delete user\n                </button>\n              </div>\n              <div>\n                <button type=\"button\">\n                  {/*eslint-disable-next-line jsx-a11y/anchor-is-valid*/}\n                  <a href=\"\">More info</a>\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n        <form\n          className=\"form\"\n          onSubmit={this.submitHandler}\n        >\n          <p>Add new user</p>\n          <input\n            onChange={this.inputHandler}\n            value={name}\n            name=\"name\"\n            type=\"text\"\n            required\n          />\n          <input\n            onChange={this.inputHandler}\n            value={username}\n            name=\"username\"\n            type=\"text\"\n          />\n          <input\n            onChange={this.inputHandler}\n            value={email}\n            name=\"email\"\n            type=\"email\"\n            required\n          />\n          <input\n            onChange={this.inputHandler}\n            value={phone}\n            name=\"phone\"\n            type=\"tel\"\n          />\n          <input\n            onChange={this.inputHandler}\n            value={website}\n            name=\"website\"\n            type=\"text\"\n          />\n          <button\n            type=\"submit\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { getUsers } from './api/api';\nimport './App.css';\nimport {ContactList} from './components/ContactList/ContactList';\n\ninterface State {\n  users: User[],\n}\n\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    users: [],\n  }\n\n  async componentDidMount () {\n    const loadedUsers = await getUsers();\n\n    this.setState({ users: loadedUsers });\n  }\n\n  addUser = (newUser: User) => {\n    this.setState(prevState => ({\n      users: [...prevState.users, newUser]\n    }))\n  };\n\n  deleteUser = (selectedUserId: number) => {\n    this.setState(prevState => ({\n      users: [...prevState.users.filter(user => user.id !== selectedUserId)]\n    }))\n  };\n\n  render() {\n    const {users} = this.state;\n\n    return (\n      <main className=\"App\">\n        <ContactList\n          visibleUsers={users}\n          onAdd={this.addUser}\n          onDelete={this.deleteUser}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}